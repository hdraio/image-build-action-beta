name: 'Build Image [HDRA Build Kit]'
description: 'Build Docker Image'

inputs:
  repository:
    description: 'Source repository to build'
    default: ${{ github.repository }}
    required: true
    type: string
  ref:
    description: 'Git ref to build from'
    required: true
    type: string
  tag:
    description: 'New image version Tag'
    required: true
    type: string
  context:
    description: 'Docker buildx context'
    default: '.'
    type: string
  package:
    description: 'Name of the package under ./docker to build'
    default: ${{ github.repository }}
    required: true
    type: string
  flavour:
    description: 'Image flavour to build'
    required: true
    default: 'alpine'
    type: string
  push:
    description: 'Push image to registries after build'
    default: false
    type: boolean


outputs:
  image:
    description: "Image"
    value: ${{ steps.image-digest.outputs.image }}
  tag:
    description: 'Image TAG'
    value: ${{ steps.image-digest.outputs.tag }}
  size:
    description: 'Image Size'
    value: ${{ steps.image-digest.outputs.size }}


runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: "${{ inputs.repository }}"
        ref: "${{ inputs.ref }}"
        token: "${{ github.token }}"

    - name: Process and prepare Slugs
      uses: rlespinasse/github-slug-action@v5
      with:
        short-length: 8 # fixed to eight symbols for compatibility reasons and easy parsing later on

    - name: Process and prepare Slugs
      id: release-meta
      run: |
        echo "clean_tag=$(sed -e 's/[/+_: @$]/-/g' <<< '${{ inputs.tag }}')" >> $GITHUB_OUTPUT
        echo "image=${{
                format('ghcr.io/{0}/{1}',
                github.repository_owner,
                inputs.package
                )
              }}" >> $GITHUB_OUTPUT

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: 'Docker Buildx Setup'
      uses: docker/setup-buildx-action@v3

    - name: 'Build and push container'
      uses: docker/build-push-action@v6
      id: docker-build
      with:
        file: ${{ inputs.context }}/docker/${{ inputs.package }}.${{ inputs.flavour }}/Dockerfile
        context: ${{ inputs.context }}
        tags: |
          ${{
            format('{0}:{1}',
            steps.release-meta.outputs.image,
            steps.release-meta.outputs.clean_tag)
          }}
        load: true
        push: ${{ inputs.push }}
        cache-from: type=gha,scope=${{ inputs.package }}
        cache-to: type=gha,mode=max,scope=${{ inputs.package }}
        build-args: |
          IMAGE_REVISION=${{ steps.release-meta.outputs.clean_tag }}

    - name: Generate Image digest
      id: image-digest
      run: |
        echo ${{ steps.docker-build.outputs.digest }}
        SIZE=$(docker images --filter=reference=${{ steps.release-meta.outputs.image }}:${{ steps.release-meta.outputs.clean_tag }} --format '{{ .VirtualSize }}')
        echo "size=${SIZE}" >> $GITHUB_OUTPUT
        echo "tag=${{ steps.release-meta.outputs.clean_tag }}"  >> $GITHUB_OUTPUT
        echo "image=${{ steps.release-meta.outputs.image }}"    >> $GITHUB_OUTPUT
